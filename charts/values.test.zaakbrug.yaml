replicaCount: 1

image:
  repository: zaakbrug
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: zaakbrug.k8s.interpar.nl
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

livenessProbe:
  initialDelaySeconds: 40
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 10
  successThreshold: 1

readinessProbe:
  initialDelaySeconds: 40
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 10
  successThreshold: 1

resources:
#   limits:
#     cpu: 2000m
#     memory: 4G
#   requests:
#     cpu: 2000m
#     memory: 3G

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

timeZone: Etc/UTC

zaakbrug:
  zds:
    timezone: Etc/UTC
  soap:
    beantwoordVraag:
      endpoint: "translate/generic/zds/BeantwoordVraag"
      validationSoftFail: false
    beantwoordVraag_v2:
      endpoint: "translate/generic/zds/v2/BeantwoordVraag"
      validationSoftFail: false
    ontvangAsynchroon:
      endpoint: "translate/generic/zds/OntvangAsynchroon"
      validationSoftFail: false
    ontvangAsynchroonMutatie_v2:
      endpoint: "translate/generic/zds/v2/OntvangAsynchroonMutatie"
      validationSoftFail: false
    ontvangAsynchroonOverdragen_v2:
      endpoint: "translate/generic/zds/v2/OntvangAsynchroonOverdragen"
      validationSoftFail: false
    vrijeBerichten:
      endpoint: "translate/generic/zds/VrijBericht"
      validationSoftFail: false
    vrijeBerichten_v2:
      endpoint: "translate/generic/zds/v2/VrijBericht"
      validationSoftFail: false
  zgw:
    # Templates used for generating zaak- and documentidentificatie
    # The syntax for variable substitution is as follows {[variable-name][:formatting-string]}
    # variables:
    # - id          Auto-incrementing identifier with 'D' as formatting option, indicating the amount of digits.
    #               example: {id:D5} with id-123 will result in '00123'
    # - datetime    The current date and time with '[Y' as formatting option, according to
    #               (https://www.oreilly.com/library/view/xslt-2nd-edition/9780596527211/ch04s05.html).
    #               Only the '[Y0001]' is currently implemented
    #               example: {datetime:[Y001]} with datetime=14-03-2023 produces '2023'
    zaakIdentificatieTemplate: ZK{datetime:[Y0001]}-{id:D5}
    documentIdentificatieTemplate: DC{datetime:[Y0001]}-{id:D5}
    besluitIdentificatieTemplate: BS{datetime:[Y0001]}-{id:D5}
    # Make sure that all Url's contain two "parts" e.g. `openzaak-nginx.zaakbrug`. Openzaak can't use a single part domain.
    zakenApi:
      rootUrl: "http://zaakbrug-staging-nginx.zaakbrug/zaken/api/v1/"
      authType: jwt # Options: 'jwt', 'basic', 'value'. 'value' uses the password field of the given authAlias as Authorization header
      authAlias: zaken-api.jwt # reference to an auth alias configured in credentials.properties
    catalogiApi:
      rootUrl: "http://zaakbrug-staging-nginx.zaakbrug/catalogi/api/v1/"
      authType: jwt
      authAlias: zaken-api.jwt
    documentenApi:
      rootUrl: "http://zaakbrug-staging-nginx.zaakbrug/documenten/api/v1/"
      authType: jwt
      authAlias: zaken-api.jwt
    besluitenApi:
      rootUrl: "http://open-zaak/besluiten/api/v1/"
      authType: jwt
      authAlias: zaken-api.jwt
  globals:
    organizations:
      - gemeenteNaam: "Súdwest-Fryslân"
        gemeenteCode: "1900"
        RSIN: "823288444"
    rolMapping:
      heeftBetrekkingOp: "BetrekkingOp"
      heeftAlsBelanghebbende: "Belanghebbende"
      heeftAlsInitiator: "Initiator"
      heeftAlsUitvoerende: "Uitvoerende"
      heeftAlsVerantwoordelijke: "Verantwoordelijke"
      heeftAlsGemachtigde: "Gemachtigde"
      heeftAlsOverigBetrokkene: "OverigeBetrokkene"
  profiles:
    profile:
      - zaakTypeIdentificatie: "B9999"
        endCaseEndDate:
          coalesceResultaat: "Onbekend"
        endDateAndResultLastStatus:
          coalesceResultaat: "Onbekend"
      - zaakTypeIdentificatie: "B1026"
        endCaseEndDate:
          coalesceResultaat: "Toegekend"

frank:
  memory: 4G
  security:
    http:
      authentication: false
      enforceHttps: false
      # Local Tomcat users, for testing purposes only
      localUsers:
        - username: tomcat
          password: changeMe
          # Options: IbisTester (default), IbisDataAdmin, IbisAdmin, IbisWebService
          roles: "IbisTester"
      # Only supports active directory for now
      activeDirectory:
        enabled: false
        url: ""
        baseDn: ""
        roleMapping:
          tester: ""
          dataAdmin: ""
          admin: ""
          webService: ""
          observer: ""
      #  # LDAP url e.g.: ldap://172.0.0.1
      #  url:
      #  # Base DN e.g.: DC=example,DC=com
      #  baseDn:
      #  # Roles to map to AD roles. e.g. dataAdmin: CN=FunctionalAdministrator,CN=Users,DC=example,DC=com
      #  roles:
      #    observer:
      #    dataAdmin:
      #    admin:
      #    tester:
  # Secret containing the contents of the credentials.properties
  credentials:
    # Secret name in the cluster
    secret:
    # Key of secret and place to mount
    key:
  #  # (TODO) Secrets should contain username and password keys, or just one of the two
  #  secrets:
  #      # Name of the secret in the namespace
  #    - name:
  #      # Alias for properties, for example: "database" can be used as ${database/username}
  #      alias:
  # (required) the name of the Frank
  instance:
    name: "ZaakBrug"
  dtap:
    # (required) Options: LOC, DEV, TST, ACC, PRD
    stage: LOC
    side: ""
  # Configurations to load.
  configurations:
    names:
      - Translate
      - Catalogi API - 1.1.1
      - Documenten API - 1.1.0
      - Zaken API - 1.2.0
  properties: {}

connections:
  jdbc:
    # Default name is "jdbc/{{ .Values.frank.instance.name }}"
    - name: ""
      # (required) Possible types: oracle, mssql, mysql, mariadb, postgresql, db2 and mongodb
      type: postgresql
      # (required) Example: <service>.<namespace>.svc.cluster.local
      host: postgresql.zaakbrug
      ssl: ""
      port: ""
      # Default database is .frank.instance.name
      database: zaakbrug
      username: postgres
      password: zaakbrug

staging:
  enabled: true
  zakenApi:
    rootUrl: http://zaakbrug-staging-nginx.zaakbrug/zaken/api/v1/
  documentenApi:
    rootUrl: http://zaakbrug-staging-nginx.zaakbrug/documenten/api/v1/
  catalogiApi:
    rootUrl: http://zaakbrug-staging-nginx.zaakbrug/catalogi/api/v1/
  besluitenApi:
    rootUrl: http://zaakbrug-staging-nginx.zaakbrug/besluiten/api/v1/
  extraEnvVars:
    - name: DOMAIN
      value: "zaakbrug-api.k8s.interpar.nl"
    - name: NOTIFICATIONS_DISABLED
      value: "yes"
  settings:
    # Leave this to false, so absolute URL's make their way though te reverse proxies.
    useXForwardedHost: false
    debug: false
    # openzaak.settings.allowedHosts Set the (v)hosts that need to be accessible for OpenZaak
    # Add the ingress route if you have one
    # Change the service names and include namespace
    allowedHosts: "zaakbrug-api.k8s.interpar.nl,rancher.interpar.nl,localhost"
    secretKey: "2lav%f$e0logsil30hlnro(r9tc@jf_uj_u4^3d@tj-b=mpfls"
    database:
      host: postgresql.zaakbrug
      port: 5432
      username: postgres
      password: zaakbrug
      name: zaakbrug
      sslmode: prefer
  persistence:
    enabled: true
    storageClassName: "rook-cephfs"

  apiProxy:
    autoscaling:
      enabled: false
    replicaCount: 1
    podLabels: {}
    securityContext:
      readOnlyRootFilesystem: true
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    image:
      repository: nginxinc/nginx-unprivileged
      tag: stable
      pullPolicy: IfNotPresent
    resources: {}
    existingConfigmap: ''
    service:
      type: ClusterIP
      port: 80
      annotations: {}
    ingress:
      enabled: true
      className: ""
      annotations: { }
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      hosts:
        - host: zaakbrug-api.k8s.interpar.nl
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: [ ]
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local